name: Custom Flutter RustDesk Windows Build

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * 1'

env:
  SCITER_RUST_VERSION: "1.75"
  RUST_VERSION: "1.75"
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.24.5"
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_COMMIT_ID: "6f29f12e82a8293156836ad81cc9bf5af41fe836"
  VERSION: "1.4.1"
  UPLOAD_ARTIFACT: true

jobs:
  generate-bridge:
    uses: ./.github/workflows/bridge.yml

  build-RustDeskTempTopMostWindow:
    uses: ./.github/workflows/third-party-RustDeskTempTopMostWindow.yml
    with:
      upload-artifact: true
      target: windows-2022
      configuration: Release
      platform: x64
      target_version: Windows10
    strategy:
      fail-fast: false

  build-for-windows-flutter:
    name: Windows x86_64
    needs: [build-RustDeskTempTopMostWindow, generate-bridge]
    runs-on: windows-2022
    steps:

      - name: Sync upstream
        shell: bash
        run: |
          git remote add upstream https://github.com/rustdesk/rustdesk.git || true
          git fetch upstream
          git checkout main
          git merge upstream/main --allow-unrelated-histories -m "auto-sync"
          # push le merge si tu veux vraiment le sauvegarder
          # git push origin main
      
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Customize Rendezvous Server and Key
        shell: bash
        env:
          RENDEZVOUS_SERVER: ${{ secrets.RENDEZVOUS_SERVER }}
          RS_PUB_KEY: ${{ secrets.RS_PUB_KEY }}
        run: |
          set -e
          if [[ -z "$RENDEZVOUS_SERVER" || -z "$RS_PUB_KEY" ]]; then
            echo "Error: RENDEZVOUS_SERVER or RS_PUB_KEY not set."
            exit 1
          fi

          CONFIG_FILE="libs/hbb_common/src/config.rs"
          [[ -f "$CONFIG_FILE" ]] || { echo "config.rs not found"; exit 1; }

          echo "Before:"
          grep -E '(PROD|EXE)_RENDEZVOUS_SERVER|RENDEZVOUS_SERVERS|SERVER_PK' "$CONFIG_FILE" || true

          # Rendez-vous server
          sed -i'' 's|pub static ref PROD_RENDEZVOUS_SERVER: RwLock<String> = RwLock::new("".to_owned());|pub static ref PROD_RENDEZVOUS_SERVER: RwLock<String> = RwLock::new("'"$RENDEZVOUS_SERVER"'".to_owned());|' "$CONFIG_FILE"
          sed -i'' 's|pub static ref EXE_RENDEZVOUS_SERVER: RwLock<String> = Default::default();|pub static ref EXE_RENDEZVOUS_SERVER: RwLock<String> = RwLock::new("'"$RENDEZVOUS_SERVER"'".to_owned());|' "$CONFIG_FILE"
          perl -0777 -pe 's|pub\s+const\s+RENDEZVOUS_SERVERS:\s*&\[\s*&str\s*\]\s*=\s*&\[\s*"[^"]*"\s*\]\s*;|pub const RENDEZVOUS_SERVERS: \&[&str] = &["'"$RENDEZVOUS_SERVER"'"];|s' -i "$CONFIG_FILE"

          # Clé publique du serveur (Flutter)
          sed -i'' '/^pub const SERVER_PK:/d' "$CONFIG_FILE"
          echo 'pub const SERVER_PK: &str = "'"$RS_PUB_KEY"'";' >> "$CONFIG_FILE"

          # Remplacer la clé officielle RS_PUB_KEY (base64)
          sed -i'' 's|^pub const RS_PUB_KEY: \&str = .*|pub const RS_PUB_KEY: \&str = "'"$(printf '%s' "$RS_PUB_KEY" | xxd -r -p | base64 -w0)"'";|' "$CONFIG_FILE"

          echo "After:"
          grep -E '(PROD|EXE)_RENDEZVOUS_SERVER|RENDEZVOUS_SERVERS|RS_PUB_KEY' "$CONFIG_FILE" || true
          
      - name: Restore bridge files
        uses: actions/download-artifact@master
        with:
          name: bridge-artifact
          path: ./

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{ env.LLVM_VERSION }}

      - name: Install flutter
        uses: subosito/flutter-action@v2.12.0
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Replace engine with rustdesk custom flutter engine
        run: |
          flutter doctor -v
          flutter precache --windows
          Invoke-WebRequest -Uri https://github.com/rustdesk/engine/releases/download/main/windows-x64-release.zip -OutFile windows-x64-release.zip
          Expand-Archive -Path windows-x64-release.zip -DestinationPath windows-x64-release
          mv -Force windows-x64-release/*  C:/hostedtoolcache/windows/flutter/stable-${{ env.FLUTTER_VERSION }}-x64/bin/cache/artifacts/engine/windows-x64-release/

      - name: Patch flutter
        shell: bash
        run: |
          cp .github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff $(dirname $(dirname $(which flutter)))
          cd $(dirname $(dirname $(which flutter)))
          [[ "3.24.5" == ${{env.FLUTTER_VERSION}} ]] && git apply flutter_3.24.4_dropdown_menu_enableFilter.diff

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.SCITER_RUST_VERSION }}
          targets: x86_64-pc-windows-msvc
          components: "rustfmt"

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: windows-2022

      - name: Clean Rust Cache
        run: cargo clean
        shell: bash

      - name: Setup vcpkg with Github Actions binary cache
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: C:\vcpkg
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          doNotCache: false

      - name: Install vcpkg dependencies
        env:
          VCPKG_DEFAULT_HOST_TRIPLET: x64-windows-static
        run: |
          if ! $VCPKG_ROOT/vcpkg \
            install \
            --triplet x64-windows-static \
            --x-install-root="$VCPKG_ROOT/installed"; then
            find "${VCPKG_ROOT}/" -name "*.log" | while read -r _1; do
              echo "$_1:"
              echo "======"
              cat "$_1"
              echo "======"
              echo ""
            done
            exit 1
          fi
          head -n 100 "${VCPKG_ROOT}/buildtrees/ffmpeg/build-x64-windows-static-rel-out.log" || true
        shell: bash

      - name: Build rustdesk
        env:
          RENDEZVOUS_SERVER: ${{ secrets.RENDEZVOUS_SERVER }}
          RS_PUB_KEY: ${{ secrets.RS_PUB_KEY }}
        run: |
          python3 .\build.py --portable --hwcodec --flutter --vram
          mv ./flutter/build/windows/x64/runner/Release ./rustdesk

          Invoke-WebRequest -Uri https://github.com/rustdesk-org/rdev/releases/download/usbmmidd_v2/usbmmidd_v2.zip -OutFile usbmmidd_v2.zip
          Expand-Archive usbmmidd_v2.zip -DestinationPath .
          Remove-Item -Path usbmmidd_v2\Win32 -Recurse
          Remove-Item -Path "usbmmidd_v2\deviceinstaller64.exe", "usbmmidd_v2\deviceinstaller.exe", "usbmmidd_v2\usbmmidd.bat"
          mv -Force .\usbmmidd_v2 ./rustdesk

          try {
            Invoke-WebRequest -Uri https://github.com/rustdesk/hbb_common/releases/download/driver/rustdesk_printer_driver_v4.zip -OutFile rustdesk_printer_driver_v4.zip
            Invoke-WebRequest -Uri https://github.com/rustdesk/hbb_common/releases/download/driver/printer_driver_adapter.zip -OutFile printer_driver_adapter.zip
            Invoke-WebRequest -Uri https://github.com/rustdesk/hbb_common/releases/download/driver/sha256sums -OutFile sha256sums

            $checksum_driver = (Select-String -Path .\sha256sums -Pattern '^([a-fA-F0-9]{64}) *rustdesk_printer_driver_v4\.zip$').Matches.Groups[1].Value
            $downloadsum_driver = Get-FileHash -Path rustdesk_printer_driver_v4.zip -Algorithm SHA256
            $checksum_dll = (Select-String -Path .\sha256sums -Pattern '^([a-fA-F0-9]{64}) *printer_driver_adapter\.zip$').Matches.Groups[1].Value
            $downloadsum_dll = Get-FileHash -Path printer_driver_adapter.zip -Algorithm SHA256
            if ($checksum_driver -eq $downloadsum_driver.Hash -and $checksum_dll -eq $downloadsum_dll.Hash) {
                Write-Output "rustdesk_printer_driver_v4, checksums match, extract the file."
                Expand-Archive rustdesk_printer_driver_v4.zip -DestinationPath .
                mkdir ./rustdesk/drivers
                mv -Force .\rustdesk_printer_driver_v4 ./rustdesk/drivers/RustDeskPrinterDriver
                Expand-Archive printer_driver_adapter.zip -DestinationPath .
                mv -Force .\printer_driver_adapter.dll ./rustdesk
            } elseif ($checksum_driver -ne $downloadsum_driver.Hash) {
                Write-Output "rustdesk_printer_driver_v4, checksums do not match, ignore the file."
            } else {
                Write-Output "printer_driver_adapter.dll, checksums do not match, ignore the file."
            }
          } catch {
              Write-Host "Ignore the printer driver error."
          }

      - name: find Runner.res
        continue-on-error: true
        shell: bash
        run: |
          runner_res=$(find . -name "Runner.res");
          if [ "$runner_res" == "" ]; then
            echo "Runner.res: not found";
          else
            echo "Runner.res: $runner_res";
            cp $runner_res ./libs/portable/Runner.res;
            echo "list ./libs/portable/Runner.res";
            ls -l ./libs/portable/Runner.res;
          fi

      - name: Download RustDeskTempTopMostWindow artifacts
        uses: actions/download-artifact@master
        with:
          name: topmostwindow-artifacts
          path: "./rustdesk"

      - name: Install Inno Setup
        run: choco install innosetup -y
        shell: powershell

      - name: Create Inno Setup Script (UTF-8, no BOM)
        shell: pwsh
        run: |
          $script = @"
          [Setup]
          AppName=RustDesk Custom
          AppVersion=${{ env.VERSION }}
          DefaultDirName={autopf}\RustDesk
          OutputDir=.
          OutputBaseFilename=rustdesk-custom-${{ env.VERSION }}-setup
          Compression=lzma
          SolidCompression=yes

          [Files]
          Source: "rustdesk\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs

          [Icons]
          Name: "{autoprograms}\RustDesk"; Filename: "{app}\rustdesk.exe"
          "@
          # Ensure UTF-8 **without** BOM
          [System.IO.File]::WriteAllLines("$PWD\rustdesk.iss", $script, [System.Text.UTF8Encoding]::new($false))

      - name: Build Installer
        shell: pwsh
        run: iscc rustdesk.iss

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-installer
          path: rustdesk-custom-${{ env.VERSION }}-setup.exe

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        with:
          tag_name: latest
          name: Latest build
          files: rustdesk-custom-${{ env.VERSION }}-setup.exe
          overwrite: true

      # Alternative for portable zip (uncomment if preferred over installer)
      # - name: Zip Portable Artifact
      #   run: |
      #     Compress-Archive -Path ./rustdesk/* -DestinationPath rustdesk-portable.zip
      #   shell: powershell
      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: rustdesk-windows-portable
      #     path: rustdesk-portable.zip
